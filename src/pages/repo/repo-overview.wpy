<template>
  <view class="container">
    <view class="header-container">
      <view style="display:flex; flex-direction:row; align-items:center">
        <image class="img" style="padding-left: 24rpx" src="/images/ic-repo-dir.png"/>
        <text class="header-name" decode="{{true}}">{{repo.name? repo.name : blank}}</text>
      </view>
      <text class="header-desc" decode="{{true}}">{{repo.description}}</text>
    </view>

    <view class="header-second">
      <view class="second-item-container" @tap="clickWatch">
        <image class="img" wx-if="{{repo.viewerSubscription != 'SUBSCRIBED'}}" src= "/images/ic-unwatch.png"/>
        <image class="img" wx-if="{{repo.viewerSubscription == 'SUBSCRIBED'}}" src= "/images/ic-watch.png"/>
        <text class="second-item-text">Watch {{watchCount? watchCount:0}}</text>
      </view>

      <view class="div"/>

      <view class="second-item-container" @tap="clickStar">
        <image class="img" wx-if="{{!repo.viewerHasStarred}}" src="/images/ic-unstar.png"/>
        <image class="img" wx-if="{{repo.viewerHasStarred}}" src="/images/ic-star.png"/>
        <text class="second-item-text">Star {{starCount? starCount:0}}</text>
      </view>

      <view class="div"/>

      <view class="second-item-container">
        <image class="img" src="/images/ic-unfork.png"/>
        <text class="second-item-text">Fork {{forkCount? forkCount:0}}</text>
      </view>
    </view>


    <view class="back-item" hover-class="back-item-hover" @tap="clickOverviewBack">
      <view class="back-branch">
        <image class="img" src='/images/ic-branch-white.png'/>
        <text class="back-branch-name" decode="{{true}}">{{branch? branch : blank}}</text>
      </view>
      <view class="back-dir">
        <image class="back-img" src='/images/ic-back.png'/>
        <text class="back-path">{{abslutePath}}</text>
      </view>
    </view>

    <scroll-view class="scroll" scroll-y>
      <repeat for="{{files}}" key="index" index="index" item="item">
        <view class="file-item" hover-class="file-item-hover" @tap="clickItem" data-item="{{item}}">
          <image class="img" src="{{item.type == 'dir'? '/images/ic-folder.png' : '/images/ic-file.png'}}"/>
          <text class="file-name">{{item.name}}</text>
        </view>
      </repeat>

      <errortip wx:if="{{error}}"/>
    </scroll-view>

    <view class="float-container">
      <image class="float-branch" src="/images/ic-branch.png" @tap="clickBranches" wx:if="{{branches.length > 1 && fileTrees[branch]}}"/>

      <view class="share-container" wx:if="{{fileTrees[branch]}}">
        <button class="share-btn" open-type="share">
          <image class="share-img" src="/images/ic-share.png"/>
        </button>
      </view>
    </view>
  </view>

  <dialog>
    <scroll-view class="dialog-container" scroll-y>
      <repeat for="{{branches}}" key="index">
        <view class="branch-item" @tap="clickBranch" data-id="{{item.name}}">
          <image class="img" src="/images/ic-fork.png"/>
          <text class="branch-name {{item.name == branch? 'blue-color':'black-color'}}">{{item.name}}</text>
      </view>
      </repeat>
    </scroll-view>
  </dialog>
</template>

<style>
  .header-container {
    width: 100%;
    display: flex;
    padding: 24rpx;
    flex-direction: column;
    background: var(--color-blue);
  }

  .header-name {
    font-size: var(--font-title);
    color: white;
    font-weight: bold;
    margin-left: 12rpx;
  }

  .header-desc {
    font-size: var(--font-tip);
    color: #f1f1f1;
    margin: 0 24rpx;
    margin-top: 12rpx;
  }

  .header-second {
    width: 100vw;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    border-top: white 1px solid;
    padding-top: 24rpx;
    padding-bottom: 24rpx;
    margin-bottom: 12rpx;
    background: white
  }

  .second-item-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }

  .img {
    width: 30rpx;
    height: 30rpx;
  }

  .second-item-text {
    font-size: var(--font-body);
    color: black;
    padding: 12rpx;
  }

  .div {
    width: 1px;
    height: 60rpx;
    background: var(--color-div);
  }

  .back-item {
    width: 90vw;
    display: flex;
    flex-direction: column;
    background: var(--color-yellow-light);
    border-radius: 4rpx;
  }

  .back-item-hover {
    background: var(--color-yellow);
  }

  .back-branch {
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    padding: 18rpx;
    border-bottom: 1px var(--color-div) solid;
  }

  .back-branch-name {
    font-size: var(--font-title);
    color: white;
    font-weight: bold;
    display: -webkit-box; /*设置自适应限制行数才能生效*/
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1; /*限制两行*/
    text-overflow: ellipsis;
    margin-left: 4rpx;
    overflow: hidden;
    word-break: break-all;
  }

  .back-dir {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 18rpx;
  }

  .back-img {
    width: 40rpx;
    height: 40rpx;
  }

  .back-path {
    font-size: var(--font-body);
    padding: 4rpx;
    margin-left: 4rpx;
    color: white;
    display: -webkit-box; /*设置自适应限制行数才能生效*/
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1; /*限制两行*/
    text-overflow: ellipsis;
    overflow: hidden;
    word-break: break-all;
  }

  .scroll {
    width: 90vw;
    flex: 1;
    overflow: scroll;
    padding: 0rpx 24rpx;
    margin-bottom: 24rpx;
  }

  .file-item {
    width: 100%;
    margin-left: 7.5vw;
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 1px 0rpx;
    padding: 24rpx;
    background: white;
  }

  .file-item-hover {
    background: var(--color-div)
  }

  .file-name {
    flex: 1;
    font-size: var(--font-body);
    padding: 4rpx;
    margin-left: 4rpx;
  }

  .float-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: fixed;
    bottom: 40rpx;
    right: 40rpx;
  }

  .float-branch {
    width: 60rpx;
    height: 60rpx;
    padding: 10rpx;
    border-radius: 50%;
    background: black;
    box-shadow: 2rpx 2rpx 20rpx 2rpx #aaa;
    opacity: 0.6;
    margin-bottom: 12rpx;
  }

  .share-container {
    width: 80rpx;
    height: 80rpx;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    background: black;
    opacity: 0.6;
    border-radius: 50%;
    box-shadow: 2rpx 2rpx 20rpx 2rpx #aaa;
  }

  .share-btn {
    width: 55rpx;
    height: 55rpx;
    padding: 0rpx;
    background-color: black;
    border-color: black;
  }

  .share-btn::after {
    border: 0;
  }

  .share-img {
    width: 50rpx;
    height: 50rpx;
    padding: 0rpx;
    margin-bottom: 12rpx;
  }

  .dialog-container {
    display: flex;
    flex-direction: column;
    border-radius: 10rpx;
    background: white;
    overflow: scroll;
  }

  .branch-item {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 32rpx 24rpx;
    border-bottom: 1px var(--color-div) solid;
  }

  .branch-name {
    display: -webkit-box; /*设置自适应限制行数才能生效*/
    font-size: var(--font-body);
    margin-left: 12rpx;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1; /*限制两行*/
    text-overflow: ellipsis;
    overflow: hidden;
    word-break: break-all;
  }

  .black-color {
    color: black;
  }

  .blue-color {
    color: var(--color-blue);
  }
</style>

<script>

  import wepy from 'wepy'
  import RepoApi from '../../web/repo/repo-api'
  import Dialog from '../../components/dialog'
  import ErrorTip from '../../components/error-tip'

  let that

  export default class RepoOverview extends wepy.page {
    components = {
      dialog: Dialog,
      errortip: ErrorTip
    }

    data = {
      blank: '&nbsp;',
      error: false,
      owner: null,
      name: null,
      repo: null,
      overview: null,
      branch: '',
      path: '',
      abslutePath: './',

      watchCount: 0,
      starCount: 0,
      forkCount: 0,

      branches: null,
      fileTrees: {},
      files: [],

      PICS: ['bmp', 'jpg', 'jpeg', 'png', 'tiff', 'gif', 'svg']
    }

    methods = {
      clickWatch(e) {
        if (that.repo) {
          if (that.repo.viewerSubscription !== 'SUBSCRIBED') {
            that.addWatching()
          } else {
            that.removeWatching()
          }
        }
      },

      clickStar(e) {
        if (that.repo) {
          if (that.repo.viewerHasStarred) {
            that.removeStar()
          } else {
            that.addStar()
          }
        }
      },

      clickItem(e) {
        var item = e.currentTarget.dataset.item
        that.path = item.path
        var type = item.type
        if (type === 'dir') {
          that.getRepoContent()
        } else {
          if (that.isPic(item.name)) {
            // wepy.navigateTo({
            //   url: 'image-overview?img=' + item.html_url
            // })
            // 使用微信原生预览图片
            wepy.previewImage({
              current: item.html_url + '?raw=true', // 当前显示图片的http链接
              urls: this.getPics() // 需要预览的图片http链接列表
            })
          } else {
            wepy.navigateTo({
              url: 'file-overview?owner=' + that.owner + '&repo=' +
               that.name + '&branch=' + that.branch + '&path=' + that.path
            })
          }
        }
      },

      clickOverviewBack(e) {
        if (that.abslutePath !== that.getRootPath()) {
          var paths = that.path.split('/')
          var currentPath = ''
          if (paths && paths.length > 1) {
            currentPath = '/' + paths[paths.length - 1]
          } else {
            currentPath = paths[0]
          }
          that.path = that.abslutePath.replace(that.getRootPath(), '').replace(currentPath, '')
          that.getRepoContent()
        }
      },

      clickBranches(e) {
        this.$invoke('dialog', 'show')
      },

      clickBranch(e) {
        this.$invoke('dialog', 'hide')
        that.branch = e.currentTarget.dataset.id
        that.path = ''
        that.abslutePath = ''
        that.getRepoContent()
      }
    }

    events = {
      'retry': (tag) => {
        if (!that.repo) {
          that.getRepoOverview()
        } else {
          that.getRepoContent()
        }
      }
    }

    onLoad(options) {
      that = this
      this.owner = options.owner
      this.name = options.name

      if (this.owner && this.name) {
        wepy.setNavigationBarTitle({
          title: this.name
        })
        this.getRepoOverview()
      }
    }

    onShareAppMessage(options) {
      return {
        title: '发现一个很腻害的仓库【' + this.name + '】，快点击查看',
        path: '/pages/repo/repo-overview?owner=' + this.owner + '&name=' + this.name,
        success: function(res) {
          wepy.showToast({
            title: '分享成功',
            icon: 'success'
          })
        },
        fail: function(res) {
          wepy.showToast({
            title: '分享取消',
            image: '../../images/ic-fail.png'
          })
        }
      }
    }

    /**
     * 获取仓库预览
     */
    async getRepoOverview() {
      wepy.showLoading({
        title: '正在加载...',
        mask: true
      })
      this.error = false

      try {
        const data = await RepoApi.getRepoOverview(this.owner, this.name)
        this.repo = data.repository
        this.branch = this.repo.defaultBranchRef.name
        this.branches = this.repo.refs.nodes
        this.formatCount()
        this.$apply()
        this.getRepoContent()
      } catch (e) {
        wepy.hideLoading()
        wepy.showToast({
          title: e,
          icon: 'none'
        })
        this.error = true
        this.$apply()
      }
    }

    /**
     * 获取文件目录内容
     */
    async getRepoContent() {
      var path = this.path
      if (path === '') {
        path = this.branch
      }
      if (!that.fileTrees[that.branch]) {
        that.fileTrees[that.branch] = {'tree': {}}
      }
      this.files = this.fileTrees[this.branch].tree[path]
      this.abslutePath = this.getRootPath() + this.path
      if (!this.files) {
        wepy.showLoading({
          title: '正在加载...',
          mask: true
        })

        try {
          const data = await RepoApi.getRepoContent(this.owner, this.name, this.branch, this.path)
          wepy.hideLoading()
          this.files = that.orderContents(data)
          this.abslutePath = this.getRootPath() + this.path
          if (!this.path || this.path === '') {
            this.fileTrees[this.branch].tree[this.branch] = this.files
          } else {
            this.fileTrees[this.branch].tree[this.path] = this.files
          }
          this.error = false
          this.$apply()
        } catch (e) {
          wepy.hideLoading()
          wepy.showToast({
            title: e,
            icon: 'none'
          })
          if (!this.fileTrees[this.branch].tree[this.branch] &&
             !this.fileTrees[this.branch].tree[this.path]) {
            this.error = true
            this.$apply()
          }
        }
      }
    }

    async addWatching() {
      try {
        wepy.showLoading({
          title: '请稍后...',
          mask: true
        })
        let data = await RepoApi.addWatching(this.repo.id)
        if (data.updateSubscription) {
          this.repo.viewerSubscription = 'SUBSCRIBED'
          this.repo.watchers.totalCount++
          this.formatCount()
          this.$apply()
          wepy.hideLoading()
        } else {
          wepy.hideLoading()
          wepy.showToast({
            title: '操作失败',
            icon: 'none'
          })
        }
      } catch (e) {
          wepy.hideLoading()
          wepy.showToast({
            title: e,
            icon: 'none'
          })
      }
    }

    async removeWatching() {
      try {
        wepy.showLoading({
          title: '请稍后...',
          mask: true
        })
        let data = await RepoApi.removeWatching(this.repo.id)
        if (data.updateSubscription) {
          this.repo.viewerSubscription = 'UNSUBSCRIBED'
          this.repo.watchers.totalCount--
          this.formatCount()
          this.$apply()
          wepy.hideLoading()
        } else {
          wepy.hideLoading()
          wepy.showToast({
            title: '操作失败',
            icon: 'none'
          })
        }
      } catch (e) {
          wepy.hideLoading()
          wepy.showToast({
            title: e,
            icon: 'none'
          })
      }
    }

    async addStar() {
      try {
        wepy.showLoading({
          title: '请稍后...',
          mask: true
        })
        let data = await RepoApi.addStar(this.repo.id)
        if (data.addStar.clientMutationId) {
          this.repo.viewerHasStarred = true
          this.repo.stargazers.totalCount++
          this.formatCount()
          this.$apply()
          wepy.hideLoading()
        } else {
          wepy.hideLoading()
          wepy.showToast({
            title: '操作失败',
            icon: 'none'
          })
        }
      } catch (e) {
          wepy.hideLoading()
          wepy.showToast({
            title: e,
            icon: 'none'
          })
      }
    }

    async removeStar() {
      try {
        wepy.showLoading({
          title: '请稍后...',
          mask: true
        })
        let data = await RepoApi.removeStar(this.repo.id)
        if (data.removeStar.clientMutationId) {
          this.repo.viewerHasStarred = false
          this.repo.stargazers.totalCount--
          this.formatCount()
          this.$apply()
          wepy.hideLoading()
        } else {
          wepy.hideLoading()
          wepy.showToast({
            title: '操作失败',
            icon: 'none'
          })
        }
      } catch (e) {
          wepy.hideLoading()
          wepy.showToast({
            title: e,
            icon: 'none'
          })
      }
    }

    /**
     * 获取根目录
     */
    getRootPath() {
      return './'
    }

    /**
     * 对文件目录进行排序，文件夹排在前面
     * @param  {[type]} data 文件目录数据
     */
    orderContents(data) {
      var dirs = []
      var files = []

      for (var f of data) {
        if (f.type === 'dir') {
          dirs.push(f)
        } else {
          files.push(f)
        }
      }

      return dirs.concat(files)
    }

    isPic(name) {
      if (name.indexOf('.') >= 0) {
        var split = name.split('.')
        if (split && split.length > 1) {
          if (this.PICS.indexOf(split[split.length - 1]) >= 0) {
            return true
          }
        }
      }
      return false
    }

    getPics() {
      var urls = []
      for (var file of this.files) {
        if (this.isPic(file.name)) {
          urls.push(file.html_url + '?raw=true')
        }
      }
      return urls
    }

    formatCount() {
      if (this.repo.watchers.totalCount && this.repo.watchers.totalCount > 1000) {
        this.watchCount = (this.repo.watchers.totalCount / 1000).toFixed(1) + 'k'
      } else {
        this.watchCount = this.repo.watchers.totalCount
      }

      if (this.repo.stargazers.totalCount && this.repo.stargazers.totalCount > 1000) {
        this.starCount = (this.repo.stargazers.totalCount / 1000).toFixed(1) + 'k'
      } else {
        this.startCount = this.repo.stargazers.totalCount
      }

      if (this.repo.forks.totalCount && this.repo.forks.totalCount > 1000) {
        this.forkCount = (this.repo.forks.totalCount / 1000).toFixed(1) + 'k'
      } else {
        this.forkCount = this.repo.forks.totalCount
      }
    }
  }

</script>
